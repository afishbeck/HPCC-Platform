{{/*
Esp configmap
Pass in dict with root and me
*/}}
{{- define "hpcc.espConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .me.name }}-configmap
data:
  {{ .me.name }}.yaml: |
    version: 1.0
    esp:
{{ toYaml (omit .me "logging") | indent 6 }}
{{- include "hpcc.generateLoggingConfig" . | indent 6 }}
      queues:
{{ include "hpcc.generateConfigMapQueues" .root | indent 6 }}
      services:
{{ include "hpcc.generateConfigMapServices" .root | indent 6 }}
{{ include "hpcc.generateVaultConfig" (dict "root" .root "categories" (list "storage" "esp" ) ) | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- end -}}

{{ range $.Values.esp -}}
{{- if not .disabled -}}
{{- $commonCtx := dict "root" $ "me" . }}
{{- $configSHA := include "hpcc.espConfigMap" $commonCtx | sha256sum }}
{{- $application := .application | default "eclwatch" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name | quote }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      run: {{ .name | quote }}
  template:
    metadata:
      labels:
        run: {{ .name | quote }}
        accessDali: "yes"
        app: {{ $application }}
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      serviceAccountName: "hpcc-default"
      containers:
      - name: {{ .name | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ esp ] 
        args: [
                {{ printf "--application=%s" $application | quote }},
                {{ include "hpcc.configArg" . }},
                {{ include "hpcc.daliArg" $ }}
              ]
{{ include "hpcc.addSentinelProbes" . | indent 8 }}
{{- include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{- include "hpcc.addResources" (dict "me" .resources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
{{ include "hpcc.addDataVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $ | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "categories" (list "system" "storage" ) ) | indent 8 }}
        - name: cert-{{ .name }}
          mountPath: /opt/HPCCSystems/secrets/certificates/tls
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addDllVolume" $ | indent 6 }}
{{ include "hpcc.addSecretVolumes" (dict "root" $ "categories" (list "system" "storage" ) ) | indent 6 }}
      - name: cert-{{ .name }}
        secret:
          secretName: {{ .name }}-tls
---
kind: ConfigMap 
{{ include "hpcc.espConfigMap" $commonCtx }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name | quote }}
spec:
  ports:
  - port: {{ required "servicePort must be specified" .servicePort }}
    protocol: TCP
    targetPort: {{ .port | default 8880 }}
  selector:
    run: {{ .name | quote }}
  type: {{ .public | ternary "LoadBalancer" "ClusterIP" }}
---
{{- if $.Values.certificates -}}
{{- if $.Values.certificates.enabled -}}
{{- $issuer := ternary $.Values.certificates.issuers.external $.Values.certificates.issuers.internal .public -}}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .name }}-cert
  namespace: {{ $.Release.Namespace }}
spec:
  # Secret names are always required.
  secretName: {{ .name }}-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - HPCC Systems
  commonName: {{ .name }}.{{ $.Release.Namespace }}.svc.cluster.local
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
  #service fqdn
  - {{ .name }}.{{ $.Release.Namespace }}.svc.cluster.local
  #service short (virtual host) name (remove?)
  - {{ .name }}
  uris:
  - spiffe://hpcc.{{ $.Release.Namespace }}/esp/{{ $application }}/{{ .name }}
  # Issuer references are always required.
  issuerRef:
    name: {{ $issuer.name }}
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: {{ $issuer.kind }}
    # This is optional since cert-manager will default to this value however
    # if you are using an external issuer, change this to that issuer group.
    group: cert-manager.io
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
